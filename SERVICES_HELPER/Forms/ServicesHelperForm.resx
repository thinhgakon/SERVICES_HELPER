<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuService.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>184, 17</value>
  </metadata>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGRkAGxsbAxISEgRTU1MAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATExMAFBQUAgQEBBcCAgIIFRUVASEhISkdHR2QKCgoqzc3
        NzcyMjIAVFRUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6OjoAZmZmAFJSUh4aGhqABwcH0xcXF6w6OjqiWlpa3kBA
        QP8wMDD/KSkpsxwcHC0SEhICd3d3AGtrawBzc3MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGpqagBpaWkpdHR0zGZmZv5TU1P/X19f/3R0
        dP+JiYn/dXV1/zk5Of8dHR3/HBwc40BAQJp2dnaUgoKCOn19fQCFhYUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjY2MAk5OTAHl5eWmKior+jo6O/46O
        jv+Pj4//jo6O/46Ojv+NjY3/f39//15eXv9XV1f/ZmZm/4KCgv+NjY2fq6urAY+PjwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnJycAl5eXABERESZPT0+EjIyM45aW
        lv+Wlpb/lJSU8Y+Pj86MjIy+jIyM0pGRkfSWlpb/l5eX/5aWlv+Dg4P/gYGB/3Nzc6Y2NjYEV1dXAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlpaWAIiIiACLi4s5gICA1pGR
        kf+oqKj/p6en/5qams6WlpZEg4ODEXJycgl7e3sUiIiISJeXl7mlpaX9qamp/5GRkf9YWFj/TU1N6VFR
        UTZPT08AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUlJQAvLy8AKKi
        ooC5ubn/vb29/7y8vP+dnZ31dHR0UX9/fwBTU1MAAAAAADg4OACUlJQAiIiIFqWlpae6urr/srKy/2ho
        aP9LS0v/Tk5OplRUVCYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJiY
        mAC9vb0At7e3S8rKyvfQ0ND/wcHB/4SEhMRjY2MPcHBwAAAAAAAAAAAAAAAAAAAAAACdnZ0Al5eXJMDA
        wNbQ0ND/pqam/2JiYv9gYGD+goKC1QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANra2gDd3d1M4ODg+ePj4/+8vLz/k5OTnf///wCYmJgAAAAAAAAAAAAAAAAAAAAAAHNz
        cwD///8Ax8fHhOHh4f/i4uL/vr6+/5CQkP2ZmZm+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADh4eEA////APX19Xf19fX/9PT0/9bW1v/V1dWd////ANPT0wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOjo6ADU1NRa8vLy/vX19f/FxcX/jY2N35CQkC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABwcHAAUFBQPHh4eQR4eHiHc3Nw28fHx3fj4+P/4+Pj/4eHh/6ysrMdzc3MRfX19AAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8PDwAN/f31339/f+6enp/5KSkv9+fn7Afn5+DAAAAAAAAAAAAAAAADU1
        NQAzMzMDNDQ0NzAwMHgUFBRIMjIyVjc3N7UrKyv4Li4uuqampmjl5eX17e3t/+3t7f/a2tr/dXV1+E9P
        T2F8fHwAPT09AAAAAAAAAAAAAAAAAMbGxgD///8A4+Pjie3t7f/Z2dn/jY2N/4iIiLuWlpYNAAAAAAAA
        AABlZWUAZWVlEGlpaYdXV1foQUFB/z4+PvdmZmb7eHh4/0dHR/8iIiL7IiIizXZ2dsDKysr24eHh/9vb
        2/96enr/Li4u4BUVFUwAAAACCQkJAAAAAADd3d0A1dXVANTU1Cjd3d3Z4ODg/9fX1/+jo6P/mpqa5p2d
        nTIAAAAAOTk5AHZ2dgBzc3NDg4OD9YiIiP+EhIT/iIiI/4uLi/+Li4v/fHx8/1NTU/89PT3/ODg4+nFx
        cf3Ozs7/1NTU/66urv9AQED/Dg4O6yMjI5FGRkZDZWVlI5GRkSO2trZBz8/Ps9PT0//S0tL/19fX/8bG
        xvmqqqqYq6urDAMDAwAAAAAJOTk5TYGBgb6QkJD/kZGR/5CQkPmMjIzoi4uL5o2NjfeRkZH/kJCQ/42N
        jf94eHj/S0tL/62trf/IyMj/xsbG/6ampv9jY2P/SUlJ/1VVVfVubm7klZWV5Lm5ufXGxsb/x8fH/8vL
        y/3U1NTBy8vLXKioqAyxsbEAkZGREHt7e5mAgID2np6e/6CgoP+WlpbPj4+PWIGBgSh5eXklfn5+SouL
        i6acnJz3o6Oj/5OTk/9GRkb/mJiY/7u7u/+5ubn/u7u7/7a2tv+np6f/n5+f/6ampv+0tLT/urq6/7m5
        uf+5ubn/v7+/ycfHxxq/v78A/v7+AAAAAACYmJg/r6+v7bm5uf+4uLj/nJyc83Z2dkt+fn4AYGBgAAAA
        AAB0dHQAWlpaCZSUlH2ysrL5tbW1/2JiYv9ISEj/bm5u8IeHh9yhoaH3rKys/66urv+vr6//ra2t/6ur
        q/+tra3/qqqq/66urvyxsbGLgICAAaSkpAAAAAAAAAAAAKurqxjFxcXOzs7O/8LCwv+IiIjAYGBgDHFx
        cQAAAAAAAAAAAAAAAAB5eXkAYWFhDLW1ta/Pz8//r6+v/1dXV/9TU1P/fX19tXt7e2SVlZXonp6e/5GR
        kfiLi4vEjIyMnZWVldOSkpLPpqamZLS0tA+xsbEAp6enAAAAAAAAAAAA5eXlHePj49fl5eX/xcXF/6Cg
        oKH///8BuLi4AAAAAAAAAAAAAAAAACIiIgDT09MAtbW1Xd/f3/3m5ub/x8fH/5KSkvmampp7ZGRkBXR0
        dHN7e3u1d3d3Y2ZmZg8AAAAAdHR0HnFxcRr8/PwAZGRkAAAAAAAAAAAAAAAAAAAAAADy8vJT9/f38fj4
        +P/g4OD/1dXVrcLCwgTExMQAAAAAAAAAAAAAAAAAAAAAAMTExAC9vb077+/v9Pf39/+9vb3/iIiI0IqK
        ihSFhYUAGxsbATY2NgU4ODgBMTExAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAObm
        5tv09PT/9fX1/+Li4v+YmJjZZWVlIW1tbQAAAAAAAAAAAAAAAAAAAAAA1NTUAMvLy0Xv7+/36enp/5OT
        k/9+fn6vgoKCBICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA0tLSo+Dg4PHm5ub/3d3d/3Z2dv8+Pj6PGRkZCCgoKAAAAAAAAAAAALe3twD///8A1tbWfeXl
        5f/b29v/mJiY/5CQkMmZmZkVmJiYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACbm5sFvLy8g9LS0v/X19f/k5OT/ykpKfcMDAyWIyMjKEFBQQNsbGwAZGRkAcrK
        yjXU1NTa19fX/9fX1/+6urr/oqKiy6GhoRehoaEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJqamgCWlpYkuLi428nJyf/AwMD/dnZ2/zExMf43NzfhU1NTq3Z2
        dpGjo6OjwsLC3cjIyP/Kysr/0dHR8s7Ozq6vr684qqqqALS0tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdHR0AGNjYwujo6PDubm5/7u7u/+4uLj/oKCg/4aG
        hv+FhYX/mpqa/7Kysv+6urr/urq6/8LCwu/Nzc1b0tLSCOvr6wBLS0sAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwcHAAV1dXBIWFhXuamprCm5ub16am
        pv2srKz/ra2t/62trf+srKz/q6ur/6urq/+srKz/s7Ozxa+vrxGurq4AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYWFgAVVVVBVNT
        Uwpra2segoKCgZeXl/Sampr/kJCQ8Y+Pj8KUlJTFlJSU65+fn6G1tbUxpqamAK+vrwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGhoaABmZmYKeHh4inx8fK52dnZMXFxcC3JychJ3d3cwdXV1CHJycgCPj48AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE9PTwAyMjIDQEBABQQEBAAaGhoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////n///8A///+AD///AAP//wAB//wAAf/4AAH/+B8A//gfgP/4
        P8D/+D/A/4AfwPAAH8DgAAeA4AAAAIAAAAEAAAAHA8AABwPgAA8D8AE/A/Aj/wPwP/8B8D//AEA//4AA
        f/+AAP//gAH//8AD///4B////P////////8=
</value>
  </data>
</root>